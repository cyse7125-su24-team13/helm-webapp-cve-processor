apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-cve-consumer
  namespace: {{ .Values.namespace }}
  labels:
    app: webapp-cve-consumer
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: webapp-cve-consumer
  template:
    metadata:
      labels:
        app: webapp-cve-consumer
    spec:
      restartPolicy: Always
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
      initContainers:
        - name: wait-for-postgresql
          image: busybox
          command: ['sh', '-c', 'until nslookup "postgresql-ha-pgpool.namespace3.svc.cluster.local"; do echo waiting for postgres; sleep 2; done']
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
        - name: db-migrations
          image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: FLYWAY_URL
              value: "{{ .Values.job.env.FLYWAY_URL }}"
            - name: FLYWAY_SCHEMAS
              value: "{{ .Values.job.env.FLYWAY_SCHEMAS }}"
            - name: FLYWAY_USER
              value: "{{ .Values.job.env.FLYWAY_USER }}"
            - name: FLYWAY_PASSWORD
              value: "{{ .Values.job.env.FLYWAY_PASSWORD }}"
            - name: FLYWAY_LOCATIONS
              value: "{{ .Values.job.env.FLYWAY_LOCATIONS }}"
          command: ["flyway"]
          args: ["migrate"]
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /flyway/sql
              name: flyway-sql
      containers:
        - name: webapp-cve-consumer
          image: {{ .Values.containers.webappCveConsumer.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_URL
              value: "postgres://{{ .Values.job.env.FLYWAY_USER }}:{{ .Values.job.env.FLYWAY_PASSWORD }}@postgresql-ha-pgpool.{{ .Values.namespace }}.svc.cluster.local:5432/mydatabase?sslmode=disable"
            - name: KAFKA_BROKERS
              value: {{ .Values.containers.webappCveConsumer.env.KAFKA_BROKERS }}
            - name: KAFKA_CLUSTER
              value: {{ .Values.containers.webappCveConsumer.env.KAFKA_CLUSTER }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - /usr/local/bin/check-readiness.sh
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 30
            failureThreshold: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - webapp-cve-consumer
            topologyKey: topology.kubernetes.io/zone
      volumes:
        - name: flyway-sql
          emptyDir: {}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-cve-consumer
  labels:
    app: webapp-cve-consumer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp-cve-consumer
  template:
    metadata:
      labels:
        app: webapp-cve-consumer
    spec:
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-hub-secret
      initContainers:
        - name: wait-for-postgresql
          image: busybox
          command: ['sh', '-c', 'until nslookup "postgresql-ha-pgpool.default.svc.cluster.local"; do echo waiting for postgres; sleep 2; done']
        - name: db-migrations
          image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: FLYWAY_URL
              value: "{{ .Values.job.env.FLYWAY_URL }}"
            - name: FLYWAY_SCHEMAS
              value: "{{ .Values.job.env.FLYWAY_SCHEMAS }}"
            - name: FLYWAY_USER
              value: "{{ .Values.job.env.FLYWAY_USER }}"
            - name: FLYWAY_PASSWORD
              value: "{{ .Values.job.env.FLYWAY_PASSWORD }}"
            - name: FLYWAY_LOCATIONS
              value: "{{ .Values.job.env.FLYWAY_LOCATIONS }}"
          command: ["flyway"]
          args: ["migrate"]
          volumeMounts:
            - mountPath: /flyway/sql
              name: flyway-sql
      containers:
        - name: webapp-cve-consumer
          image: rahhul1309/webapp-cve-consumer:1004
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_URL
              value: "postgres://{{ .Values.job.env.FLYWAY_USER }}:{{ .Values.job.env.FLYWAY_PASSWORD }}@postgresql-ha-pgpool.default.svc.cluster.local:5432/mydatabase?sslmode=disable"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - ps aux | grep webapp-cve-consumer | grep -v grep
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - /usr/local/bin/check-readiness.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 20
            failureThreshold: 3
      volumes:
        - name: flyway-sql
          emptyDir: {}
